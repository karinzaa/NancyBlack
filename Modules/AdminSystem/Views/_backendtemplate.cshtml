@{
    var entity = this.Model.DataType as NantCom.NancyBlack.Modules.DatabaseSystem.DataType;
    var entityName = entity.OriginalName;
    
}

@@inherits NantCom.NancyBlack.NancyBlackRazorViewBase
@@{
    Layout = "@(this.Model.Layout)";
}
@@section Title
{
    Administration - @entityName
}
<div ng-module="@(entityName)Module"
     ng-controller="@(entityName)Controller as ctrl">

    <h1 class="page-header">
        Manage @(entityName)
        <i class="fa fa-spinner fa-spin" ng-show="isBusy"></i>
    </h1>

    <div style="margin-bottom: 30px">
        This page helps you manage @(entityName) in this system.

    </div>

    <div class="alert alert-danger">
        This page was auto-generated by NancyBlack Engine on: @(DateTime.Now) <br />
        If you generate this page again, all custom changes will be lost.
        <p class="margin-top: 5px">

            <a class="btn btn-lg btn-danger" href="@( "@(this.RenderContext.Context.Request.Path)" )?regenerate=true">Generate Again</a>
        </p>
    </div>

    <div id="@(entityName)Modal"
         class="modal fade" data-keyboard="false" data-backdrop="static">

        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button"
                            class="close"
                            data-dismiss="modal">
                        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                    </button>
                    <button type="button"
                            ng-hide="object.id == null"
                            ng-click="ctrl.delete(object)"
                            class="close text-warning"
                            style="margin-right: 10px">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                    <h2 class="modal-title">
                        <span ng-show="object.id == null">Create</span>
                        <span ng-show="object.id != null">Edit</span>
                        @(entityName)
                    </h2>
                </div>
                <div class="modal-body">

                    @{
                        var groups = from p in entity.Properties
                                     where p.Name != "Id" && p.Name.StartsWith("__") == false
                                    let underscorePos = p.Name.IndexOf("_")                                    
                                    let groupName = underscorePos > -1 ? p.Name.Substring(0, underscorePos) : "General"
                                    group p by groupName into g
                                    orderby g.Key
                                    select g;
                    }
                    
                    <form role="form">

                        <tabset>
                            @foreach (var g in groups)
                            {
                                <tab heading="@g.Key">

                                    @foreach (var property in g)
                                    {
                                        if (property.Name == "Id" || property.Name.StartsWith("__"))
                                        {
                                            continue;
                                        }
                                        else if (property.Name.EndsWith("Id"))
                                        {
                                            // Lookup
                                            var tableName = property.Name.Substring(0, property.Name.Length - 2);

                                            <div class="form-group">
                                                <label class="control-label" for="@(property.Name)">@(property.Name.Replace(g.Key + "_", ""))</label>

                                                <ui-select ng-model="object.@(property.Name)"
                                                           theme="bootstrap"
                                                           reset-search-input="true">
                                                    <ui-select-match placeholder="@(property.Name)...">{{$select.selected.Title}}</ui-select-match>
                                                    <ui-select-choices refresh="ctrl.refreshLookup('@(tableName)', $select.search)"
                                                                       repeat="item.Id as item in lookup.@(tableName) | filter: { Title: $select.search }">
                                                        <span>{{item.Title}}</span>
                                                    </ui-select-choices>
                                                </ui-select>
                                            </div>
                                        }
                                        else if (property.Type == "System.Boolean")
                                        {
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox"
                                                           ng-model="object.@(property.Name)" /> @(property.Name.Replace(g.Key + "_", ""))
                                                    </label>
                                                </div>
                                        }
                                        else if (property.Name.Contains("Hours") || property.Name.Contains("Time"))
                                        {
                                            <div class="dropdown form-group">
                                                <label class="control-label" for="@(property.Name)">@(property.Name.Replace(g.Key + "_", ""))</label>
                                                <timepicker ng-model="object.@(property.Name)" show-meridian="false"></timepicker>
                                            </div>
                                        }
                                        else if (property.Type == "DateTime")
                                        {
                                            <div class="dropdown form-group">

                                                <label class="control-label" for="start">@(property.Name.Replace(g.Key + "_", ""))</label>

                                                <p class="input-group">
                                                    <input type="text"
                                                           class="form-control"
                                                           datepicker-popup="dd MMMM yyyy, HH:mm"
                                                           ng-model="object.@(property.Name)"
                                                           is-open="datepickeropen['@(property.Name)']"
                                                           close-text="Close" />
                                                    <span class="input-group-btn">
                                                        <button type="button"
                                                                class="btn btn-default"
                                                                ng-click="ctrl.opendatepicker($event, '@(property.Name)')">
                                                            <i class="glyphicon glyphicon-calendar"></i>
                                                        </button>
                                                    </span>
                                                </p>

                                            </div>
                                        }
                                        else if (property.Name.EndsWith("Text"))
                                        {
                                            <div class="form-group">
                                                <label class="control-label" for="@(property.Name)">@(property.Name.Replace(g.Key + "_", ""))</label>
                                                <textarea name="@(property.Name)"
                                                          class="form-control"
                                                          ng-model="object.@(property.Name)"
                                                          placeholder="@(property.Name.Replace(g.Key + "_", ""))" rows="10"></textarea>
                                            </div>

                                        }
                                        else
                                        {
                                            <input type="text" name="@(property.Name)" title="@(property.Name.Replace(g.Key + "_", ""))"
                                                   ncb-textbox
                                                   ng-model="object.@(property.Name)" />
                                        }
                                    }
                                </tab>
                            }
                        </tabset>

                    </form>
                    <div class="alert alert-danger alert-dismissible" ng-show="error != null">
                        {{error.message}}
                    </div>

                    <alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.message}}</alert>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-success btn-lg"
                            data-target="#@(entityName)Form"
                            ng-disabled="isBusy"
                            ng-click="ctrl.save(object)">

                        <span>
                            <span class="busycenter" ng-show="isBusy">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                            <span ng-show="object.id == null">Create</span>
                            <span ng-show="object.id != null">Save</span>
                        </span>
                    </button>
                </div>
            </div>
        </div>

    </div>

    <div>
        <button class="btn btn-success"
                ng-click="ctrl.create()">
            <span class="glyphicon glyphicon-plus-sign"></span>
            <span>Create new @(entityName)</span>
        </button>
    </div>

    <alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.message}}</alert>

    <table id="@(entityName)Table"
           class="table table-striped table-hover"
           style="width: 100%">
        <thead>
            <tr>
                @foreach (var property in entity.Properties)
                {
                    if (property.Name == "Id" || property.Name == "__version")
                    {
                        continue;
                    }
                    else if (property.Name.EndsWith("Id"))
                    {
                        // Lookup
                        var tableName = property.Name.Substring(0, property.Name.Length - 2);
                        <th>@tableName</th>
                    }
                    else
                    {
                        <th>@property.Name</th>
                    }
                }
                <th class="commandColumn"></th>
            </tr>

        </thead>
        <tr ng-repeat="item in list">
            @foreach (var property in entity.Properties)
            {
                if (property.Name == "Id" || property.Name == "__version")
                {
                    continue;
                }
                else if (property.Name.EndsWith("Id"))
                {
                    // Lookup
                    var tableName = property.Name.Substring(0, property.Name.Length - 2);
                    <td>{{ (lookup.@(tableName) | filter: { Id : item.@(property.Name) })[0].Title }}</td>
                }
                else if (property.Type == "int")
                {
                    <td>{{item.@(property.Name) | number }}</td>
                }
                else if (property.Type == "double")
                {
                    <td>{{item.@(property.Name) | number:2 }}</td>
                }
                else if (property.Type == "DateTime")
                {
                    <td>{{item.@(property.Name) | date:'dd MMMM yyyy, HH:mm' }}</td>
                }
                else
                {
                    <td>{{item.@(property.Name) }}</td>
                }
            }
            <td style="white-space: nowrap">

                <button class="btn btn-primary"
                        ng-click="ctrl.view(item)">
                    <span class="glyphicon glyphicon-pencil"></span>
                </button>
            </td>
        </tr>



    </table>

</div>



@@section Scripts
{

<script>

    (function () {

        var module = angular.module('@(entityName)Module', ['ui.bootstrap', 'ncb-database']);

        module.controller("@(entityName)Controller", function ($scope, $rootScope, $http, ncbDatabaseClient) {

            var $me = this;

            var ncbClient = new ncbDatabaseClient($me, $scope, "@(entityName)");
            ncbClient.list();

            this.view = function (object) {

                $scope.object = object;
                $("#@(entityName)Modal").modal('show');
            }

            this.create = function () {
                $scope.object = {};
                $("#@(entityName)Modal").modal('show');
            }
            
            $scope.datepickeropen = {};
            this.opendatepicker = function ($event, target) {
                $event.preventDefault();
                $event.stopPropagation();

                $scope.datepickeropen[target] = !$scope.datepickeropen[target];
            }

        });

    })();

</script>

}